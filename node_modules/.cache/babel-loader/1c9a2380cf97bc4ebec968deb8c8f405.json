{"ast":null,"code":"class Block {\n  constructor(blockType) {\n    this.blockType = blockType;\n  }\n\n  initWater(leftHeight, rightHeight) {\n    this.nextWaterLevel = [leftHeight, rightHeight];\n    this.downFlow = false;\n    this.updated = true;\n  }\n\n  initDownFlowWater() {\n    this.nextWaterLevel = [7, 7];\n    this.downFlow = true;\n    this.updated = true;\n  }\n\n  heighten(leftHeight, rightHeight) {\n    if (this.blockType !== \"water\") return;\n    this.nextWaterLevel[0] = Math.max(this.waterLevel[0], leftHeight, this.nextWaterLevel[0]);\n    this.nextWaterLevel[1] = Math.max(this.waterLevel[1], rightHeight, this.nextWaterLevel[1]);\n  }\n\n  update() {\n    if (this.blockType !== \"water\") return;\n    if (!this.updated) return;\n    this.blockType = \"water\";\n    this.waterLevel[0] = this.nextWaterLevel[0];\n    this.waterLevel[1] = this.nextWaterLevel[1];\n    this.nextWaterLevel = [0, 0];\n\n    if (this.waterLevel[0] <= 0 && this.waterLevel[1] <= 0) {\n      this.blockType = \"air\";\n      this.waterLevel = [0, 0];\n    }\n\n    this.updated = false;\n  }\n\n  print() {\n    if (this.blockType === \"stone\") return \"##\";\n    if (this.blockType === \"air\") return \"  \";\n    if (this.blockType === \"water\") return this.waterLevel[0] + \"\" + this.waterLevel[1];\n  }\n\n}\n\nexport default Block;","map":{"version":3,"sources":["/Users/maxliu/HackGT8/src/WaterLogic.js"],"names":["Block","constructor","blockType","initWater","leftHeight","rightHeight","nextWaterLevel","downFlow","updated","initDownFlowWater","heighten","Math","max","waterLevel","update","print"],"mappings":"AAAA,MAAMA,KAAN,CAAY;AACRC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AACDC,EAAAA,SAAS,CAACC,UAAD,EAAaC,WAAb,EAA0B;AAC/B,SAAKC,cAAL,GAAsB,CAACF,UAAD,EAAaC,WAAb,CAAtB;AACA,SAAKE,QAAL,GAAgB,KAAhB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,cAAL,GAAsB,CAAC,CAAD,EAAI,CAAJ,CAAtB;AACA,SAAKC,QAAL,GAAgB,IAAhB;AAEA,SAAKC,OAAL,GAAe,IAAf;AACH;;AACDE,EAAAA,QAAQ,CAACN,UAAD,EAAaC,WAAb,EAA0B;AAC9B,QAAI,KAAKH,SAAL,KAAmB,OAAvB,EAAgC;AAChC,SAAKI,cAAL,CAAoB,CAApB,IAAyBK,IAAI,CAACC,GAAL,CAAS,KAAKC,UAAL,CAAgB,CAAhB,CAAT,EAA6BT,UAA7B,EAAyC,KAAKE,cAAL,CAAoB,CAApB,CAAzC,CAAzB;AACA,SAAKA,cAAL,CAAoB,CAApB,IAAyBK,IAAI,CAACC,GAAL,CAAS,KAAKC,UAAL,CAAgB,CAAhB,CAAT,EAA6BR,WAA7B,EAA0C,KAAKC,cAAL,CAAoB,CAApB,CAA1C,CAAzB;AACH;;AACDQ,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKZ,SAAL,KAAmB,OAAvB,EAAgC;AAChC,QAAI,CAAC,KAAKM,OAAV,EAAmB;AACnB,SAAKN,SAAL,GAAiB,OAAjB;AACA,SAAKW,UAAL,CAAgB,CAAhB,IAAqB,KAAKP,cAAL,CAAoB,CAApB,CAArB;AACA,SAAKO,UAAL,CAAgB,CAAhB,IAAqB,KAAKP,cAAL,CAAoB,CAApB,CAArB;AACA,SAAKA,cAAL,GAAsB,CAAC,CAAD,EAAI,CAAJ,CAAtB;;AACA,QAAI,KAAKO,UAAL,CAAgB,CAAhB,KAAsB,CAAtB,IAA2B,KAAKA,UAAL,CAAgB,CAAhB,KAAsB,CAArD,EAAwD;AACpD,WAAKX,SAAL,GAAiB,KAAjB;AACA,WAAKW,UAAL,GAAkB,CAAC,CAAD,EAAI,CAAJ,CAAlB;AACH;;AACD,SAAKL,OAAL,GAAe,KAAf;AACH;;AACDO,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAKb,SAAL,KAAmB,OAAvB,EAAgC,OAAO,IAAP;AAChC,QAAI,KAAKA,SAAL,KAAmB,KAAvB,EAA8B,OAAO,IAAP;AAC9B,QAAI,KAAKA,SAAL,KAAmB,OAAvB,EAAgC,OAAO,KAAKW,UAAL,CAAgB,CAAhB,IAAqB,EAArB,GAA0B,KAAKA,UAAL,CAAgB,CAAhB,CAAjC;AACnC;;AAtCO;;AAwCZ,eAAeb,KAAf","sourcesContent":["class Block {\n    constructor(blockType) {\n        this.blockType = blockType;\n    }\n    initWater(leftHeight, rightHeight) {\n        this.nextWaterLevel = [leftHeight, rightHeight];\n        this.downFlow = false;\n\n        this.updated = true\n    }\n    initDownFlowWater() {\n        this.nextWaterLevel = [7, 7];\n        this.downFlow = true;\n\n        this.updated = true\n    }\n    heighten(leftHeight, rightHeight) {\n        if (this.blockType !== \"water\") return;\n        this.nextWaterLevel[0] = Math.max(this.waterLevel[0], leftHeight, this.nextWaterLevel[0]);\n        this.nextWaterLevel[1] = Math.max(this.waterLevel[1], rightHeight, this.nextWaterLevel[1]);\n    }\n    update() {\n        if (this.blockType !== \"water\") return;\n        if (!this.updated) return;\n        this.blockType = \"water\";\n        this.waterLevel[0] = this.nextWaterLevel[0];\n        this.waterLevel[1] = this.nextWaterLevel[1];\n        this.nextWaterLevel = [0, 0];\n        if (this.waterLevel[0] <= 0 && this.waterLevel[1] <= 0) {\n            this.blockType = \"air\";\n            this.waterLevel = [0, 0];\n        }\n        this.updated = false;\n    }\n    print() {\n        if (this.blockType === \"stone\") return \"##\";\n        if (this.blockType === \"air\") return \"  \";\n        if (this.blockType === \"water\") return this.waterLevel[0] + \"\" + this.waterLevel[1];\n    }\n}\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}