{"ast":null,"code":"/**Types of blocks:\n * 0 Air\n * 1 Stone\n * 2 Water\n * 3 Fixed water\n */\n\n/** Function takes in grid, coordinates and type of block to be placed\n * returns boolean representing success / failure\n */\nfunction placeBlock(grid, x, y, type) {\n  if (grid[x][y] == 0) {\n    grid[x][y] = type;\n    return true;\n  } else {\n    return false;\n  }\n}\n/** Function takes in grid and replaces water blocks with air blocks\n */\n\n\nfunction resetGrid(grid) {\n  for (let x = 0; x < grid.length; x++) {\n    for (let y = 0; y < grid.length; y++) {\n      if (grid[x][y] == 2) {\n        grid[x][y] = 0;\n      }\n    }\n  }\n}\n\nfunction intializeGrid(size) {\n  var grid = new Array(size);\n\n  for (var i = 0; i < size; i++) {\n    grid[i] = new Array(size);\n\n    for (var j = 0; j < size; j++) {\n      grid[i][j] = 0;\n    }\n  }\n\n  return grid;\n}\n\nconst numToIcon = {\n  0: \" \",\n  1: \"#\",\n  2: \"o\",\n  3: \"o\"\n};\n\nfunction printGrid(grid) {\n  process.stdout.write(\"----------------\\n\");\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      process.stdout.write(numToIcon[grid[i][j]] + \" \");\n    }\n\n    process.stdout.write(\"|\\n\");\n  }\n\n  process.stdout.write(\"----------------\\n\");\n}\n\nfunction updateGrid(grid) {\n  for (var i = 0; i < grid.length - 1; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      if (grid[i][j] == 2) {\n        if (grid[i + 1][j] == 0) {\n          grid[i + 1][j] = 4;\n        } else if (grid[i + 1][j] == 1) {\n          if (grid[i][j - 1] == 0) grid[i][j - 1] = 4;\n          if (grid[i][j + 1] == 0) grid[i][j + 1] = 4;\n        }\n\n        grid[i][j] = 3;\n      }\n    }\n  }\n\n  for (var i = 0; i < grid.length; i++) {\n    for (var j = 0; j < grid[i].length; j++) {\n      if (grid[i][j] == 4) grid[i][j] = 2;\n    }\n  }\n}\n\nfunction placeWater(grid, x, y) {\n  grid[x][y] = 2;\n} // test code end\n\n\nfunction done(grid) {\n  for (let i = 0; i < grid[0].length; i++) {\n    if (grid[grid.length][i] === 2 || grid[grid.length][i] === 3) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction placeStone(grid, x, y) {\n  grid[x][y] = 1;\n}\n\nexport default GameLogic;","map":{"version":3,"sources":["/home/johndoe/Documents/GT/HackGT/DisHackGT8/Discere-Hack-GT-8/HackGT8/src/GameLogic.js"],"names":["placeBlock","grid","x","y","type","resetGrid","length","intializeGrid","size","Array","i","j","numToIcon","printGrid","process","stdout","write","updateGrid","placeWater","done","placeStone","GameLogic"],"mappings":"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","sourcesContent":["/**Types of blocks:\n * 0 Air\n * 1 Stone\n * 2 Water\n * 3 Fixed water\n */\n\n/** Function takes in grid, coordinates and type of block to be placed\n * returns boolean representing success / failure\n */\nfunction placeBlock(grid, x, y, type) {\n\tif (grid[x][y] == 0) {\n\t\tgrid[x][y] = type;\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/** Function takes in grid and replaces water blocks with air blocks\n */\nfunction resetGrid(grid) {\n\tfor (let x = 0; x < grid.length; x++) {\n\t\tfor (let y = 0; y < grid.length; y++) {\n\t\t\tif (grid[x][y] == 2) {\n\t\t\t\tgrid[x][y] = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction intializeGrid(size) {\n    var grid = new Array(size);\n    for (var i = 0; i < size; i++) {\n        grid[i] = new Array(size);\n        for(var j=0; j<size; j++) {\n            grid[i][j] = 0;\n        }\n    }\n    return grid;\n}\n\nconst numToIcon = {0:\" \", 1:\"#\", 2:\"o\", 3:\"o\"};\n\nfunction printGrid(grid) {\n    process.stdout.write(\"----------------\\n\");\n    for(var i=0; i<grid.length; i++) {\n        for(var j=0; j<grid[i].length; j++) {\n            process.stdout.write(numToIcon[grid[i][j]] + \" \");\n        }\n        process.stdout.write(\"|\\n\");\n    }\n    process.stdout.write(\"----------------\\n\");\n}\n\nfunction updateGrid(grid) {\n    for(var i=0; i<grid.length-1; i++) {\n        for(var j=0; j<grid[i].length; j++) {\n            if (grid[i][j] == 2) {\n                if (grid[i+1][j] == 0) {\n                    grid[i+1][j] = 4;\n                } else if (grid[i+1][j] == 1) {\n                    if (grid[i][j-1] == 0) grid[i][j-1] = 4;\n                    if (grid[i][j+1] == 0) grid[i][j+1] = 4;\n                }\n                grid[i][j] = 3;\n            }\n        }\n    }\n    for(var i=0; i<grid.length; i++) {\n        for(var j=0; j<grid[i].length; j++) {\n            if (grid[i][j] == 4) grid[i][j] = 2;\n        }\n    }\n    \n}\n\nfunction placeWater(grid, x, y) {\n    grid[x][y] = 2;\n}\n// test code end\n\nfunction done(grid) {\n    for (let i = 0; i < grid[0].length; i++) {\n        if (grid[grid.length][i] === 2 || grid[grid.length][i] === 3) {\n            return true\n        }\n    }\n    return false\n}\n\nfunction placeStone(grid, x, y) {\n\tgrid[x][y] = 1;\n}\n\nexport default GameLogic"]},"metadata":{},"sourceType":"module"}