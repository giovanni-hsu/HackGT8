{"ast":null,"code":"var _jsxFileName = \"/Users/maxliu/Desktop/HackGT8/src/index.js\";\nimport { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './GameLogic.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blockDict = {\n  'stone': {\n    'material': 'stone'\n  },\n  'empty': {\n    'material': 'empty'\n  },\n  'water': {\n    'material': 'water'\n  }\n};\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      material: props.material\n    };\n  }\n\n  render() {\n    console.log(this.props.material);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => this.state.material !== this.setState({\n        material: this.state.material !== 'stone' ? 'stone' : 'empty'\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material \" + this.state.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(material) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      material: material\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this);\n  }\n\n  renderInitGrid(width, height) {\n    const grid = [];\n\n    for (let row = 0; row < width; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < height; col++) {\n        currentRow.push(blockDict['empty']);\n      }\n\n      grid.push(currentRow);\n    }\n\n    return grid.map((row, rowId) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((block, index) => {\n          return this.renderSquare(block.material, index);\n        })\n      }, rowId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  render() {\n    const status = 'Poggers';\n    const renderedGrid = this.renderInitGrid(8, 8);\n    console.log(renderedGrid);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), renderedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      grid: intializeGrid(props.size),\n      waterStart: props.waterStart,\n      waterEnd: props.waterEnd\n    };\n  }\n\n  startWater() {\n    placeWater(this.state.grid, this.state.waterStart.x, this.state.waterStart.y);\n\n    while (!done(this.state.grid)) {\n      updateWater();\n    }\n  }\n\n  updateWater() {\n    updateGrid(this.state.grid);\n    this.setState({\n      grid: this.state.grid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.startWater();\n        },\n        children: \"Start water\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/maxliu/Desktop/HackGT8/src/index.js"],"names":["div","React","ReactDOM","blockDict","Square","Component","constructor","props","state","material","render","console","log","setState","Board","renderSquare","renderInitGrid","width","height","grid","row","currentRow","col","push","map","rowId","block","index","status","renderedGrid","Game","intializeGrid","size","waterStart","waterEnd","startWater","placeWater","x","y","done","updateWater","updateGrid","document","getElementById"],"mappings":"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","sourcesContent":["import { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './GameLogic.js';\n\nconst blockDict = {\n  'stone': {\n    'material' : 'stone',\n  },\n  'empty': {\n    'material' : 'empty',\n  },\n  'water': {\n    'material' : 'water',\n  },\n\n};\n\nclass Square extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      material: props.material,\n    };\n  }\n\n  render() {\n    console.log(this.props.material);\n    return (\n      <button className={\"square\"} onClick={() => this.state.material !== this.setState({material: this.state.material !== 'stone' ? 'stone' : 'empty'})}>\n        <div className={\"material \" + this.state.material}></div>\n      </button>\n    );\n  }\n}\n  \nclass Board extends React.Component {\n    renderSquare(material) {\n      return <Square material={material}/>;\n    }\n\n    renderInitGrid(width, height) {\n      const grid = [];\n      for (let row = 0; row < width; row++) {\n        const currentRow = [];\n        for (let col = 0; col < height; col++) {\n          currentRow.push(blockDict['empty']);\n        }\n          grid.push(currentRow);\n      }\n\n      return grid.map((row, rowId) => {\n        return (\n          <div className=\"board-row\" key={rowId}>\n              {row.map((block, index) => {\n                return (\n                  this.renderSquare(block.material, index)\n                );\n              })}\n          </div>\n        )\n      });\n\n    }\n\n    render() {\n      const status = 'Poggers';\n      const renderedGrid = this.renderInitGrid(8, 8);\n      console.log(renderedGrid);\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n\n          {renderedGrid}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        grid: intializeGrid(props.size),\n        waterStart: props.waterStart,\n        waterEnd: props.waterEnd,\n      }\n      \n    }\n\n    startWater() {\n      placeWater(this.state.grid, this.state.waterStart.x, this.state.waterStart.y);\n      while(!done(this.state.grid)) {\n        updateWater();\n      }\n    }\n\n    updateWater() {\n      updateGrid(this.state.grid);\n      this.setState({grid: this.state.grid});\n    }\n\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <button onClick={() => {this.startWater()}}>Start water</button>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}