{"ast":null,"code":"var _jsxFileName = \"/Users/maxliu/Desktop/HackGT8/src/index.js\";\nimport { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Square extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(color, i) {\n    return /*#__PURE__*/_jsxDEV(Square, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this);\n  }\n\n  renderGrid(width, height) {\n    const grid = [];\n\n    for (let row = 0; row < width; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < height; col++) {\n        currentRow.push({\n          color: 'white'\n        });\n      }\n\n      grid.push(currentRow);\n    }\n\n    console.log(grid);\n    return grid.map((row, rowId) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((color, index) => {\n          return this.renderSquare(color, index);\n        })\n      }, rowId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  render() {\n    const status = 'Poggers';\n    const renderedGrid = this.renderGrid(8, 8);\n    console.log(renderedGrid);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), renderedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 84,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/maxliu/Desktop/HackGT8/src/index.js"],"names":["div","React","ReactDOM","Square","Component","render","Board","renderSquare","color","i","renderGrid","width","height","grid","row","currentRow","col","push","console","log","map","rowId","index","status","renderedGrid","Game","document","getElementById"],"mappings":";AAAA,SAASA,GAAT,QAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;;AAGA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAQ,MAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAPgC;;AAUrC,MAAMC,KAAN,SAAoBL,KAAK,CAACG,SAA1B,CAAoC;AAChCG,EAAAA,YAAY,CAACC,KAAD,EAAQC,CAAR,EAAW;AACrB,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,UAAMC,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGH,KAAxB,EAA+BG,GAAG,EAAlC,EAAsC;AACpC,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGJ,MAAxB,EAAgCI,GAAG,EAAnC,EAAuC;AACrCD,QAAAA,UAAU,CAACE,IAAX,CAAgB;AACdT,UAAAA,KAAK,EAAE;AADO,SAAhB;AAGD;;AACCK,MAAAA,IAAI,CAACI,IAAL,CAAUF,UAAV;AACH;;AAEDG,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,WAAOA,IAAI,CAACO,GAAL,CAAS,CAACN,GAAD,EAAMO,KAAN,KAAgB;AAC9B,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKP,GAAG,CAACM,GAAJ,CAAQ,CAACZ,KAAD,EAAQc,KAAR,KAAkB;AACzB,iBACE,KAAKf,YAAL,CAAkBC,KAAlB,EAAyBc,KAAzB,CADF;AAGD,SAJA;AADL,SAAgCD,KAAhC;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVM,CAAP;AAYD;;AAEDhB,EAAAA,MAAM,GAAG;AACP,UAAMkB,MAAM,GAAG,SAAf;AACA,UAAMC,YAAY,GAAG,KAAKd,UAAL,CAAgB,CAAhB,EAAmB,CAAnB,CAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AAEA,wBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBAAyBD;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAGGC,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7C+B;;AAgDlC,MAAMC,IAAN,SAAmBxB,KAAK,CAACG,SAAzB,CAAmC;AACjCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbgC,C,CAgBnC;;;AAEAH,QAAQ,CAACG,MAAT,eACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nclass Square extends React.Component {\n    render() {\n      return (\n        <button className=\"square\">\n          {/* TODO */}\n        </button>\n      );\n    }\n  }\n  \nclass Board extends React.Component {\n    renderSquare(color, i) {\n      return <Square />;\n    }\n\n    renderGrid(width, height) {\n      const grid = [];\n      for (let row = 0; row < width; row++) {\n        const currentRow = [];\n        for (let col = 0; col < height; col++) {\n          currentRow.push({\n            color: 'white'\n          });\n        }\n          grid.push(currentRow);\n      }\n\n      console.log(grid);\n\n      return grid.map((row, rowId) => {\n        return (\n          <div className=\"board-row\" key={rowId}>\n              {row.map((color, index) => {\n                return (\n                  this.renderSquare(color, index)\n                );\n              })}\n          </div>\n        )\n      });\n\n    }\n\n    render() {\n      const status = 'Poggers';\n      const renderedGrid = this.renderGrid(8, 8);\n      console.log(renderedGrid);\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n\n          {renderedGrid}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}