{"ast":null,"code":"var _jsxFileName = \"/Users/maxliu/Desktop/HackGT8/src/index.js\";\nimport { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameGrid from './GameLogic.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blockDict = {\n  stone: {\n    'material': 'stone'\n  },\n  empty: {\n    'material': 'empty'\n  },\n  water: {\n    'material': 'water'\n  },\n  fixw: {\n    'material': 'fixw'\n  },\n  leftcornerwater: {\n    'material': 'left-corner-water'\n  },\n  rightcornerwater: {\n    'material': 'right-corner-water'\n  }\n};\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props); //console.log(props);\n\n    console.log(props.grid[props.x][props.y], [props.x], [props.y]);\n    console.log('important piece', blockDict[props.grid[props.x][props.y]].material);\n    this.state = {\n      material: blockDict[props.grid[props.x][props.y]].material\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => {\n        this.props.grid.placeStone(this.props.x, this.props.y);\n        this.setState({\n          material: this.state.material !== 'stone' ? 'stone' : 'empty'\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material \" + blockDict[this.props.grid.getIndex(this.props.x, this.props.y)].material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(material, x, y) {\n    console.log('piece one', x, y, this.props.grid.grid[x][y]);\n    return /*#__PURE__*/_jsxDEV(Square, {\n      x: x,\n      y: y,\n      grid: this.props.grid.grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this);\n  }\n\n  renderInitGrid(width, height) {\n    const grid = [];\n\n    for (let row = 0; row < width; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < height; col++) {\n        currentRow.push(blockDict['empty']);\n      }\n\n      grid.push(currentRow);\n    }\n\n    let columnIndex = -1;\n    let rowIndex = -1;\n    return grid.map(row => {\n      columnIndex++;\n      rowIndex = -1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map(block => {\n          rowIndex++;\n          console.log('piece two', block.material, rowIndex, columnIndex, this.props.grid.grid[rowIndex][columnIndex]);\n          return this.renderSquare(block.material, rowIndex, columnIndex);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  render() {\n    const status = 'Poggers';\n    const renderedGrid = this.renderInitGrid(this.props.grid.getSize(), this.props.grid.getSize());\n    console.log(\"Rendered\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), renderedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.waterInterval = null;\n    this.state = {\n      grid: new GameGrid(props.size)\n    };\n  }\n\n  startWater() {\n    console.log(this.state);\n    this.state.grid.initBucketGrid(this.props.size, this.props.waterStart, this.props.waterEnd);\n    this.state.grid.placeWater(this.props.waterStart[0], 0);\n    this.waterInterval = setInterval(() => {\n      this.updateWater(this);\n    }, 700);\n  }\n\n  updateWater(game) {\n    game.state.grid.updateGrid();\n    game.setState({\n      grid: game.state.grid\n    });\n\n    if (game.state.grid.done()) {\n      clearInterval(game.waterInterval);\n      console.log(game.state.grid.checkForWin());\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          grid: this.state.grid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.startWater();\n        },\n        children: \"Start water\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {\n  size: 8,\n  waterStart: [0],\n  waterEnd: [5]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/maxliu/Desktop/HackGT8/src/index.js"],"names":["div","React","ReactDOM","GameGrid","blockDict","stone","empty","water","fixw","leftcornerwater","rightcornerwater","Square","Component","constructor","props","console","log","grid","x","y","material","state","render","placeStone","setState","getIndex","Board","renderSquare","renderInitGrid","width","height","row","currentRow","col","push","columnIndex","rowIndex","map","block","status","renderedGrid","getSize","Game","waterInterval","size","startWater","initBucketGrid","waterStart","waterEnd","placeWater","setInterval","updateWater","game","updateGrid","done","clearInterval","checkForWin","document","getElementById"],"mappings":"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","sourcesContent":["import { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameGrid from './GameLogic.js';\n\nconst blockDict = {\n  stone: {\n    'material' : 'stone',\n  },\n  empty: {\n    'material' : 'empty',\n  },\n  water: {\n    'material' : 'water',\n  },\n  fixw: {\n    'material' : 'fixw',\n  },\n  leftcornerwater: {\n    'material' : 'left-corner-water'\n  },\n  rightcornerwater: {\n    'material' : 'right-corner-water'\n  }\n\n};\n\nclass Square extends React.Component {\n\n  constructor(props) {\n    super(props);\n    //console.log(props);\n    console.log(props.grid[props.x][props.y], [props.x], [props.y]);\n    console.log('important piece', blockDict[props.grid[props.x][props.y]].material)\n    this.state = {\n      material: blockDict[props.grid[props.x][props.y]].material,\n    };\n  }\n\n  render() {\n    return (\n      <button className={\"square\"} onClick={() => {\n        this.props.grid.placeStone(this.props.x, this.props.y); \n        this.setState({material: this.state.material !== 'stone' ? 'stone' : 'empty'})}\n        }>\n        <div className={\"material \" + blockDict[this.props.grid.getIndex(this.props.x, this.props.y)].material}></div>\n      </button>\n    );\n  }\n}\n  \nclass Board extends React.Component {\n    renderSquare(material, x, y) {\n      console.log('piece one', x, y, this.props.grid.grid[x][y]);\n      return <Square x={x} y={y} grid={this.props.grid.grid}/>;\n    }\n\n    renderInitGrid(width, height) {\n      const grid = [];\n      for (let row = 0; row < width; row++) {\n        const currentRow = [];\n        for (let col = 0; col < height; col++) {\n          currentRow.push(blockDict['empty']);\n        }\n          grid.push(currentRow);\n      }\n      let columnIndex = -1;\n      let rowIndex = -1;\n      return grid.map((row) => {\n        columnIndex++;\n        rowIndex = -1;\n        return (\n          <div className=\"board-row\" key={columnIndex}>\n              {row.map((block) => {\n                rowIndex++;\n                console.log('piece two', block.material, rowIndex, columnIndex, this.props.grid.grid[rowIndex][columnIndex]);\n                return (\n                  this.renderSquare(block.material, rowIndex, columnIndex)\n                );\n              })}\n          </div>\n        )\n      });\n\n    }\n\n    render() {\n      const status = 'Poggers';\n      const renderedGrid = this.renderInitGrid(this.props.grid.getSize(), this.props.grid.getSize());\n      console.log(\"Rendered\");\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n\n          {renderedGrid}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.waterInterval = null;\n      this.state = {\n        grid: new GameGrid(props.size),\n      }\n      \n    }\n\n    startWater() {\n      console.log(this.state);\n      this.state.grid.initBucketGrid(this.props.size, this.props.waterStart, this.props.waterEnd);\n      this.state.grid.placeWater(this.props.waterStart[0], 0);\n      this.waterInterval = setInterval(() => {this.updateWater(this)}, 700);\n    }\n\n    updateWater(game) {\n      game.state.grid.updateGrid();\n      game.setState({grid: game.state.grid});\n      if (game.state.grid.done()) {\n        clearInterval(game.waterInterval);\n        console.log(game.state.grid.checkForWin());\n      }\n    }\n\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board grid={this.state.grid}/>\n          </div>\n          <button onClick={() => {this.startWater()}}>Start water</button>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game size={8} waterStart={[0]} waterEnd={[5]}/>,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}