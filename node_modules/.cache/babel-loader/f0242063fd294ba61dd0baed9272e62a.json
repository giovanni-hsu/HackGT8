{"ast":null,"code":"var _jsxFileName = \"/home/johndoe/Documents/GT/HackGT/DisHackGT8/Discere-Hack-GT-8/HackGT8/src/index.js\";\nimport { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameGrid from './GameLogic.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blockDict = {\n  'stone': {\n    'material': 'stone'\n  },\n  'empty': {\n    'material': 'empty'\n  },\n  'water': {\n    'material': 'water'\n  }\n};\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      material: props.material\n    };\n  }\n\n  render() {\n    console.log(this.props.material);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => {\n        this.props.grid.placeStone(this.props.x, this.props.y);\n        this.setState({\n          material: this.state.material !== 'stone' ? 'stone' : 'empty'\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"material \" + this.state.material\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Board extends React.Component {\n  renderSquare(material, x, y) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      material: material,\n      x: x,\n      y: y,\n      grid: this.props.grid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this);\n  }\n\n  renderInitGrid(width, height) {\n    const grid = [];\n\n    for (let row = 0; row < width; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < height; col++) {\n        currentRow.push(blockDict['empty']);\n      }\n\n      grid.push(currentRow);\n    }\n\n    let columnIndex = -1;\n    let rowIndex = -1;\n    return grid.map(row => {\n      columnIndex++;\n      rowIndex = 0;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map(block => {\n          rowIndex++;\n          return this.renderSquare(block.material, rowIndex, columnIndex);\n        })\n      }, columnIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  render() {\n    const status = 'Poggers';\n    const renderedGrid = this.renderInitGrid(8, 8);\n    console.log(renderedGrid);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), renderedGrid]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props.startWater.x);\n    this.state = {\n      grid: new GameGrid(props.size),\n      waterStart: props.waterStart,\n      waterEnd: props.waterEnd\n    };\n  }\n\n  startWater() {\n    this.state.grid.placeWater(this.state.waterStart.x, this.state.waterStart.y);\n\n    while (!this.state.grid.done()) {\n      this.updateWater();\n    }\n  }\n\n  updateWater() {\n    this.state.grid.updateGrid();\n    this.setState({\n      grid: this.state.grid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          grid: this.state.grid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.startWater();\n        },\n        children: \"Start water\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this);\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {\n  size: 8,\n  startWater: {\n    x: 0,\n    y: 0\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 5\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/home/johndoe/Documents/GT/HackGT/DisHackGT8/Discere-Hack-GT-8/HackGT8/src/index.js"],"names":["div","React","ReactDOM","GameGrid","blockDict","Square","Component","constructor","props","state","material","render","console","log","grid","placeStone","x","y","setState","Board","renderSquare","renderInitGrid","width","height","row","currentRow","col","push","columnIndex","rowIndex","map","block","status","renderedGrid","Game","startWater","size","waterStart","waterEnd","placeWater","done","updateWater","updateGrid","document","getElementById"],"mappings":"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","sourcesContent":["import { div } from 'prelude-ls';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameGrid from './GameLogic.js';\n\nconst blockDict = {\n  'stone': {\n    'material' : 'stone',\n  },\n  'empty': {\n    'material' : 'empty',\n  },\n  'water': {\n    'material' : 'water',\n  },\n\n};\n\nclass Square extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      material: props.material,\n    };\n  }\n\n  render() {\n    console.log(this.props.material);\n    return (\n      <button className={\"square\"} onClick={() => {\n        this.props.grid.placeStone(this.props.x, this.props.y); \n        this.setState({material: this.state.material !== 'stone' ? 'stone' : 'empty'})}\n        }>\n        <div className={\"material \" + this.state.material}></div>\n      </button>\n    );\n  }\n}\n  \nclass Board extends React.Component {\n    renderSquare(material, x, y) {\n      return <Square material={material} x={x} y={y} grid={this.props.grid}/>;\n    }\n\n    renderInitGrid(width, height) {\n      const grid = [];\n      for (let row = 0; row < width; row++) {\n        const currentRow = [];\n        for (let col = 0; col < height; col++) {\n          currentRow.push(blockDict['empty']);\n        }\n          grid.push(currentRow);\n      }\n      let columnIndex = -1;\n      let rowIndex = -1;\n      return grid.map((row) => {\n        columnIndex++;\n        rowIndex = 0;\n        return (\n          <div className=\"board-row\" key={columnIndex}>\n              {row.map((block) => {\n                rowIndex++;\n                return (\n                  this.renderSquare(block.material, rowIndex, columnIndex)\n                );\n              })}\n          </div>\n        )\n      });\n\n    }\n\n    render() {\n      const status = 'Poggers';\n      const renderedGrid = this.renderInitGrid(8, 8);\n      console.log(renderedGrid);\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n\n          {renderedGrid}\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n\n    constructor(props) {\n      super(props);\n      console.log(props.startWater.x);\n      this.state = {\n        grid: new GameGrid(props.size),\n        waterStart: props.waterStart,\n        waterEnd: props.waterEnd,\n      }\n      \n    }\n\n    startWater() {\n      this.state.grid.placeWater(this.state.waterStart.x, this.state.waterStart.y);\n      while(!this.state.grid.done()) {\n        this.updateWater();\n      }\n    }\n\n    updateWater() {\n      this.state.grid.updateGrid();\n      this.setState({grid: this.state.grid});\n    }\n\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board grid={this.state.grid}/>\n          </div>\n          <button onClick={() => {this.startWater()}}>Start water</button>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game size={8} startWater={{x:0,y:0}}/>,\n    document.getElementById('root')\n  );\n  "]},"metadata":{},"sourceType":"module"}