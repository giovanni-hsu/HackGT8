(this.webpackJsonpdiscere=this.webpackJsonpdiscere||[]).push([[0],{10:function(t,e,r){"use strict";r.r(e);var i=r(1),a=r(2),n=r(6),s=r(5),o=(r(11),r(3)),l=r.n(o),h=r(8),c=r.n(h),d=(r(21),r(9)),u=r(0),g={stone:{material:"stone"},air:{material:"air"},water:{material:"water"},fixw:{material:"fixw"},leftcornerwater:{material:"left-corner-water"},rightcornerwater:{material:"right-corner-water"}},v=function(t){Object(n.a)(r,t);var e=Object(s.a)(r);function r(t){var a;return Object(i.a)(this,r),(a=e.call(this,t)).state={material:g[t.grid.getIndex(t.x,t.y).blockType].material},a}return Object(a.a)(r,[{key:"render",value:function(){var t=this,e=this.props.grid.getIndex(this.props.x,this.props.y),r="water"===e.blockType?"water w"+(e.waterLevel[0]+1)+"-"+(e.waterLevel[1]+1):g[e.blockType].material,i="stone"===e.blockType?"drop-shadow":"";return Object(u.jsx)("button",{className:"square "+i,onClick:function(){t.props.grid.placeBlock(t.props.x,t.props.y,"stone"),t.setState({material:"stone"!==t.state.material?"stone":"air"})},children:Object(u.jsxs)("div",{className:"block-container",children:[Object(u.jsx)("div",{className:"material "+r}),Object(u.jsx)("div",{className:"background-block"})]})})}}]),r}(l.a.Component),p=function(t){Object(n.a)(r,t);var e=Object(s.a)(r);function r(){return Object(i.a)(this,r),e.apply(this,arguments)}return Object(a.a)(r,[{key:"renderSquare",value:function(t,e,r){return Object(u.jsx)(v,{x:e,y:r,grid:this.props.grid})}},{key:"renderInitGrid",value:function(t,e){for(var r=this,i=[],a=0;a<t;a++){for(var n=[],s=0;s<e;s++)n.push(g.air);i.push(n)}var o=-1,l=-1;return i.map((function(t){return o++,l=-1,Object(u.jsx)("div",{className:"board-row",children:t.map((function(t){return l++,r.renderSquare(t.material,l,o)}))},o)}))}},{key:"render",value:function(){var t=this.renderInitGrid(this.props.grid.getSize(),this.props.grid.getSize());return Object(u.jsxs)("div",{children:[Object(u.jsx)("div",{className:"status",children:"Poggers"}),t]})}}]),r}(l.a.Component),f=function(t){Object(n.a)(r,t);var e=Object(s.a)(r);function r(t){var a;return Object(i.a)(this,r),(a=e.call(this,t)).waterInterval=null,a.state={grid:new d.a(t.size)},a}return Object(a.a)(r,[{key:"startWater",value:function(){var t=this;console.log(this.state),this.state.grid.initBucketGrid(this.props.size,this.props.waterStart,this.props.waterEnd),this.state.grid.placeWater(this.props.waterStart[0],0),this.state.grid.updateAllBlock(),this.waterInterval=setInterval((function(){t.updateWater(t)}),400)}},{key:"updateWater",value:function(t){t.state.grid.updateGrid(),console.log(t.state.grid),t.setState({grid:t.state.grid}),t.state.grid.done()&&clearInterval(t.waterInterval)}},{key:"render",value:function(){var t=this;return Object(u.jsxs)("div",{className:"game",children:[Object(u.jsx)("div",{className:"game-board",children:Object(u.jsx)(p,{grid:this.state.grid})}),Object(u.jsx)("button",{onClick:function(){t.startWater()},children:"Start water"})]})}}]),r}(l.a.Component);c.a.render(Object(u.jsx)(f,{size:8,waterStart:[0],waterEnd:[5]}),document.getElementById("root"))},21:function(t,e,r){},4:function(t,e,r){"use strict";var i=r(1),a=r(2),n=function(){function t(e){Object(i.a)(this,t),this.blockType=e}return Object(a.a)(t,[{key:"initWater",value:function(t,e){this.nextWaterLevel=[t,e],this.waterLevel=[0,0],this.updated=!0}},{key:"heighten",value:function(t,e){"water"===this.blockType&&(this.nextWaterLevel[0]=Math.max(this.waterLevel[0],t,this.nextWaterLevel[0]),this.nextWaterLevel[1]=Math.max(this.waterLevel[1],e,this.nextWaterLevel[1]))}},{key:"update",value:function(){this.updated&&(this.blockType="water",this.waterLevel[0]=this.nextWaterLevel[0],this.waterLevel[1]=this.nextWaterLevel[1],this.nextWaterLevel=[0,0],this.waterLevel[0]<=0&&this.waterLevel[1]<=0&&(this.blockType="air",this.waterLevel=[0,0]),this.updated=!1)}},{key:"print",value:function(){return"stone"===this.blockType?"##":"air"===this.blockType?"  ":"water"===this.blockType?this.waterLevel[0]+""+this.waterLevel[1]:void 0}}]),t}();e.a=n},9:function(t,e,r){"use strict";(function(t){var i=r(1),a=r(2),n=r(4),s=function(){function e(t){Object(i.a)(this,e),this.size=t,this.grid=this.intializeGrid(t),this.bucketGrid=null,this.numToIcon={air:" ",stone:"#",water:"o",fixw:"o"},this.notupdated=!1}return Object(a.a)(e,[{key:"getSize",value:function(){return this.size}},{key:"placeBlock",value:function(t,e,r){return"air"===this.grid[e][t].blockType&&(this.grid[e][t]=new n.a(r),!0)}},{key:"resetGrid",value:function(){for(var t=0;t<this.grid.length;t++)for(var e=0;e<this.grid.length;e++)"water"!==this.grid[e][t].blockType&&"fixw"!==this.grid[e][t].blockType||(this.grid[e][t]=new n.a("air"))}},{key:"intializeGrid",value:function(){for(var t=new Array(this.size),e=0;e<this.size;e++){t[e]=new Array(this.size);for(var r=0;r<this.size;r++)t[e][r]=new n.a("air")}return t}},{key:"initBucketGrid",value:function(t,e,r){this.bucketGrid=new Array(2);for(var i=0;i<2;i++){this.bucketGrid[i]=new Array(t);for(var a=0;a<t;a++)this.bucketGrid[i][a]=new n.a("air")}for(var s in e)this.bucketGrid[0][s]="water";for(var o in r)this.bucketGrid[1][o]="buck"}},{key:"checkForWin",value:function(t,e){var r;console.log(e);for(var i=0;i<e[1].length;i++)"buck"===i&&(r=i);var a=t[t.length-1][r].blockType;return"water"===a||"fixw"===a}},{key:"printGrid",value:function(){if(this.notupdated)throw new Error("not updated!");t.stdout.write("-----------------------------\n");for(var e=0;e<this.grid.length;e++){for(var r=0;r<this.grid[e].length;r++)t.stdout.write(this.grid[e][r].print()+"  ");t.stdout.write("|\n")}t.stdout.write("-----------------------------\n")}},{key:"updateGrid",value:function(){this.updateAllNeighborBlock(),this.updateAllBlock()}},{key:"updateAllNeighborBlock",value:function(){for(var t=0;t<this.grid.length;t++)for(var e=0;e<this.grid[t].length;e++)this.updateNeighborBlock(t,e)}},{key:"updateNeighborBlock",value:function(t,e){var r=this.grid[t][e];if(t<0||t>=this.grid.length||e<0||e>=this.grid[0])throw new Error("x, y not in range");if("water"===r.blockType&&t!==this.grid.length-1)if("stone"!==this.grid[t+1][e].blockType)if("air"===this.grid[t+1][e].blockType)this.grid[t+1][e].initWater(7,7);else{if("water"!==this.grid[t+1][e].blockType)throw new Error("strange error 1");this.grid[t+1][e].heighten(7,7)}else e>0&&("air"===this.grid[t][e-1].blockType?this.grid[t][e-1].initWater(r.waterLevel[0]-1,r.waterLevel[0]):this.grid[t][e-1].heighten(r.waterLevel[0]-1,r.waterLevel[0])),e<this.grid[t].length-1&&("air"===this.grid[t][e+1].blockType?this.grid[t][e+1].initWater(r.waterLevel[1],r.waterLevel[1]-1):this.grid[t][e+1].heighten(r.waterLevel[1],r.waterLevel[1]-1))}},{key:"updateAllBlock",value:function(){for(var t=0;t<this.grid.length;t++)for(var e=0;e<this.grid[t].length;e++)this.grid[t][e].update();this.notupdated=!1}},{key:"placeWater",value:function(t,e){if(this.notupdated=!0,0!==t)throw new Error("you can only place water at top row");this.grid[t][e].initWater(7,7)}},{key:"done",value:function(){for(var t=0;t<this.grid.length;t++)for(var e=0;e<this.grid[t].length;e++)if("water"===this.grid[t][e].blockType&&t!==this.grid.length-1){if("air"===this.grid[t+1][e].blockType)return!1;if("stone"===this.grid[t+1][e].blockType){if(e>0&&"air"===this.grid[t][e-1].blockType)return!1;if(e<this.grid[t].length-1&&"air"===this.grid[t][e+1].blockType)return!1}}return!0}},{key:"getIndex",value:function(t,e){return this.grid[e][t]}}]),e}();new s(8).placeBlock(4,3,"stone"),e.a=s}).call(this,r(22))}},[[10,1,2]]]);
//# sourceMappingURL=main.fa4416c0.chunk.js.map